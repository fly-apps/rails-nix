app = "rails-nix"

[build]

  nix_base_revision = "b05cd6ea80153b15c710496eca5b8b3d680b0de1"
  nix_base_sha256 = "sha256:1is3p554dn8w4006i22nhxs30y93i11kylj1izibjzdmdi1xgi7j"

  # Required files/dirs that, when changed, will trigger 'rails asset:precompile' during the build
  asset_compilation_files = [
      "app/assets",
      "app/javascript",
      "vendor/javascript",
      "bin/rails",
      "config",
      "lib/tasks",
      "Rakefile",
      "config.ru"
  ]

  # Include a base Docker layer with useful tools (ca-certs, bash, etc)
  nix_include_tools = true

  # Used by Dockerfile for comparing behavior with the Nix builder
  [build.args]
    BUNDLER_VERSION = "2.3.6"
    NODE_VERSION = "14"
    RUBY_VERSION = "3.1.1"
    SERVER_COMMAND = "bundle exec puma -C config/puma.rb"

[requirements.runtime]
  ruby_version = "3.1.1"
  additional_packages = ["ffmpeg"]

[deploy]
  release_command = "bundle exec rails db:migrate"

[env]
  # Rails uses these out of the box, so we specify as env vars
  PORT = "8080"
  RAILS_ENV = "production"
  RAILS_LOG_TO_STDOUT = "true"

[[services]]
  http_checks = []
  internal_port = 8080
  processes = ["app"]
  protocol = "tcp"
  script_checks = []

  [services.concurrency]
    hard_limit = 25
    soft_limit = 20
    type = "connections"

  [[services.ports]]
    force_https = true
    handlers = ["http"]
    port = 80

  [[services.ports]]
    handlers = ["tls", "http"]
    port = 443

  [[services.tcp_checks]]
    grace_period = "1s"
    interval = "15s"
    restart_limit = 0
    timeout = "2s"

[[statics]]
  guest_path = "/app/public"
  url_prefix = "/"
